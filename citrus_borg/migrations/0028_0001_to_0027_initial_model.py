# Generated by Django 2.2.6 on 2020-01-17 18:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import p_soc_auto_base.utils


class Migration(migrations.Migration):
    replaces = [
        ('citrus_borg', '0001_initial'),
        ('citrus_borg', '0002_auto_20181122_1502'),
        ('citrus_borg', '0005_auto_20181126_1422'),
        ('citrus_borg', '0010_auto_20181205_1248'),
        ('citrus_borg', '0010_auto_20181205_1442'),
        ('citrus_borg', '0011_merge_20181205_1600'),
        ('citrus_borg', '0015_winlogevent_raw_message'),
        ('citrus_borg', '0016_auto_20190107_0919'),
        ('citrus_borg', '0017_auto_20190308_0908'),
        ('citrus_borg', '0023_auto_20190527_1127'),
        ('citrus_borg', '0024_auto_20190529_1437'),
        ('citrus_borg', '0025_auto_20190603_1059'),
    ]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedEventSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('source_name', models.CharField(db_index=True, help_text='the equivalent of filtering by -ProviderName in Get-WinEvent: the application will only capture events generated by providers listed in this model', max_length=253, unique=True, verbose_name='source name')),
            ],
            options={
                'verbose_name': 'Allowed Event Source',
                'verbose_name_plural': 'Allowed Event Sources',
            },
        ),
        migrations.CreateModel(
            name='BorgSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('site', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='site name')),
            ],
            options={
                'verbose_name': 'Bot Site',
                'verbose_name_plural': 'Bot Sites',
            },
        ),
        migrations.CreateModel(
            name='KnownBrokeringDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('broker_name', models.CharField(db_index=True, help_text='the name of a Citrix session server that has serviced at least one request', max_length=15, unique=True, verbose_name='server name')),
                ('last_seen', models.DateTimeField(db_index=True, verbose_name='last seen')),
            ],
            options={
                'verbose_name': 'Citrix App Server',
                'verbose_name_plural': 'Citrix App Servers',
            },
        ),
        migrations.CreateModel(
            name='WindowsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('log_name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='Log Name')),
            ],
            options={
                'verbose_name': 'Supported Windows Log',
                'verbose_name_plural': 'Supported Windows Logs',
            },
        ),
        migrations.CreateModel(
            name='WinlogbeatHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('host_name', models.CharField(db_index=True, max_length=63, unique=True, verbose_name='host name')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='IP address')),
                ('last_seen', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Citrix bot last seen')),
                ('excgh_last_seen', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Exchange client bot last seen')),
                ('orion_id', models.BigIntegerField(blank=True, default=0, help_text='Use the value in this field to query the Orion server', null=True, verbose_name='Orion Object Id')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='citrus_borg_winlogbeathost_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'Remote Monitoring Bot',
                'verbose_name_plural': 'Remote Monitoring Bots',
            },
        ),
        migrations.CreateModel(
            name='WinlogEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('uuid', models.UUIDField(db_index=True, default=p_soc_auto_base.utils.get_uuid, unique=True, verbose_name='UUID')),
                ('record_number', models.BigIntegerField(db_index=True, help_text='event record external identifier', verbose_name='Record Number')),
                ('event_state', models.CharField(db_index=True, default='TBD', help_text='Status of the Citrix application logon request', max_length=32, verbose_name='Status')),
                ('event_test_result', models.NullBooleanField(verbose_name='Test Result')),
                ('storefront_connection_duration', models.DurationField(blank=True, db_index=True, null=True, verbose_name='Storefront connection time')),
                ('receiver_startup_duration', models.DurationField(blank=True, db_index=True, null=True, verbose_name='receiver startup time')),
                ('connection_achieved_duration', models.DurationField(blank=True, db_index=True, null=True, verbose_name='Connection time')),
                ('logon_achieved_duration', models.DurationField(blank=True, db_index=True, null=True, verbose_name='Logon time')),
                ('logoff_achieved_duration', models.DurationField(blank=True, db_index=True, null=True, verbose_name='Logoff time')),
                ('failure_reason', models.TextField(blank=True, null=True, verbose_name='Failure Reason')),
                ('failure_details', models.TextField(blank=True, null=True, verbose_name='Failure Details')),
                ('raw_message', models.TextField(blank=True, help_text='the application cannot process this message', null=True, verbose_name='Raw Message')),
                ('is_expired', models.BooleanField(db_index=True, default=False, verbose_name='event has expired')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='citrus_borg_winlogevent_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('event_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='citrus_borg.AllowedEventSource', verbose_name='Event Provider')),
                ('source_host', models.ForeignKey(limit_choices_to={'last_seen__isnull': False}, on_delete=django.db.models.deletion.PROTECT, to='citrus_borg.WinlogbeatHost', verbose_name='Event Source Host')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='citrus_borg_winlogevent_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('windows_log', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='citrus_borg.WindowsLog', verbose_name='Windows Log')),
                ('xml_broker', models.ForeignKey(blank=True, help_text='The Citrix XML Broker that successfully serviced this request', null=True, on_delete=django.db.models.deletion.SET_NULL, to='citrus_borg.KnownBrokeringDevice', verbose_name='XML Broker')),
            ],
            options={
                'verbose_name': 'Citrix Bot Windows Log Event',
                'verbose_name_plural': 'Citrix Bot Windows Log Events',
                'ordering': ['-created_on'],
                'get_latest_by': '-created_on',
            },
        ),
    ]
