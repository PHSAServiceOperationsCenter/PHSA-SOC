# Generated by Django 2.2.6 on 2020-01-08 23:42

from django.db import migrations


def update_dc_with_bucket(apps, name, bucket):
    non_orion_node_model = apps.get_model('ldap_probe', 'NonOrionADNode')
    orion_node_model = apps.get_model('ldap_probe', 'OrionADNode')
    non_orion_node_model.objects.filter(node_dns=name).update(
            performance_bucket=bucket)

    orion_node_model.objects.filter(node__node_dns=name).update(
             performance_bucket=bucket)

    orion_node_model.objects.filter(node__node_caption=name).update(
                performance_bucket=bucket)


def add_dcs_to_buckets(apps, schema_editor):
    bucket_lists = {'Alert at 10 ms': ['srvfr01', 'srvpngcs01.phsapng.ca', 'srvpngcs02.phsapng.ca', 'SPDC0007', 'svmcs10.phsabc.ehcnet.ca', 'svmcs06.phsabc.ehcnet.ca', 'spdcphsa001.phsabc.ehcnet.ca', 'SRVCS01-wmi', 'svmcs16.phsabc.ehcnet.ca', 'srvcs03.phsabc.ehcnet.ca', 'svmcs15.phsabc.ehcnet.ca', 'srvcs02', 'srvfr02', 'spdc0008.healthbc.org', 'srvcs04', 'PHCDC21', 'spdcphc001.phcnet.ca', 'phcdc7', 'spdc0010.healthbc.org', 'phcdc5-wmi', 'SPDC0009', 'SPDC0001', 'DCNS0004', 'SPDC0002', 'SPDC0004', 'SPDC0003'],
                    'Alert at 100 ms': ['VESUVIUS', 'olympus', 'FUJI', 'everest', 'DCNS0002', 'phcdc3', 'PROTEUS', 'JANUS', 'LAILA', 'blackcomb.fraserhealth.org', 'atlas', 'RAINIER', 'whitney.fraserhealth.org', 'ROBSON', 'WHISTLER', 'phcdc42', 'svmcs15-new', 'phcdc41', 'srvcs41', 'svmcs16-new.phsabc.ehcnet.ca', 'spdc0017', 'Cypress', 'SPDC0012', 'SPDC0011', 'SPDC0005', 'SPDC0006', 'SPDC0015', 'SPDC0013', 'SPDC0014', 'SPDC0016'],
                    'Alert at 1 s': ['vchdc14', 'VCHDC6', 'vchdc2', 'spdcvrhb006', 'vchdc1', 'vchdc4.vch.ca', 'rootdc6.vrhb.local', 'VRHBDC7', 'vchdc5', 'rootdc4.vrhb.local', 'VRHBDC5-wmi', 'rootdc5.vrhb.local', 'vchdc3-wmi', 'phsacdcldcphsa3.phsabc.ehcnet.ca', 'VCHDC3-snmp', 'phsacdcldcphc3.phcnet.ca', 'phsacdcldcphsa4.phsabc.ehcnet.ca', 'phsacdcldcphc4.phcnet.ca', 'VRHBDC5-snmp', 'vchdc16', 'VCHDC7-wmi', 'vrhbdc6.main.vrhb.local', 'RHSDC2', 'vchdc41', 'vchdc9', 'vrhbdc41', 'vchdc8-wmi', 'vchdc13', 'vchdc12'],
                    'Alert at 10 s': ['phsacdcldcvch3.vch.ca', 'phsacdcldcvch4.vch.ca', 'phsacdcldcvrhb3.main.vrhb.local', 'phsacdcldcvrhb4.main.vrhb.local']}

    perf_bucket_model = apps.get_model('ldap_probe', 'ADNodePerfBucket')

    for bucket_name in bucket_lists:
        bucket = perf_bucket_model.objects.get(name=bucket_name)
        for domain_controller_name in bucket_lists[bucket_name]:
            update_dc_with_bucket(apps, domain_controller_name, bucket)


class Migration(migrations.Migration):

    dependencies = [
        ('ldap_probe', '0044_reset_performance_buckets'),
    ]

    operations = [migrations.RunPython(add_dcs_to_buckets,
                                       reverse_code=migrations.RunPython.noop)
    ]
