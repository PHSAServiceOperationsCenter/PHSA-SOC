# Generated by Django 2.1.4 on 2019-05-27 21:09

import citrus_borg.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('citrus_borg', '0023_auto_20190527_1127'),
    ]

    operations = [
        migrations.CreateModel(
            name='MailBotLogEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=citrus_borg.models.get_uuid, unique=True, verbose_name='UUID')),
                ('event_status', models.CharField(db_index=True, default='TBD', help_text='Status reported by the mail borg client for this event', max_length=16, verbose_name='Status')),
                ('event_type', models.CharField(db_index=True, default='TBD', help_text='Type of this event', max_length=32, verbose_name='Type')),
                ('event_message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('event_exception', models.TextField(blank=True, null=True, verbose_name='Exception')),
                ('event_body', models.TextField(blank=True, help_text='The full event information as collected from the wire', null=True, verbose_name='Raw Data')),
                ('is_expired', models.BooleanField(db_index=True, default=False, verbose_name='event has expired')),
                ('mail_account', models.TextField(blank=True, help_text='Usually DOMAIN\\user, the primaty email address', null=True, verbose_name='Exchange Account Associated With This Event')),
                ('event_registered_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Database date/time stamp for the registration of this event to the application', verbose_name='Event Registered on')),
            ],
            options={
                'verbose_name': 'Mail Monitoring Event',
                'verbose_name_plural': 'Mail Monitoring Events',
            },
        ),
        migrations.CreateModel(
            name='MailBotMessage',
            fields=[
                ('mail_message_identifier', models.CharField(db_index=True, max_length=36, unique=True, verbose_name='Exchange Message Identifier')),
                ('mail_message_from', models.TextField(blank=True, null=True, verbose_name='From')),
                ('mail_message_to', models.TextField(blank=True, null=True, verbose_name='To')),
                ('mail_message_created', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Created')),
                ('mail_message_sent', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Sent')),
                ('mail_message_received', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Received')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mail_collector.MailBotLogEvent')),
            ],
            options={
                'verbose_name': 'Mail Monitoring Message',
                'verbose_name_plural': 'Mail Monitoring Messages',
            },
        ),
        migrations.AddField(
            model_name='mailbotlogevent',
            name='source_host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='citrus_borg.WinlogbeatHost', verbose_name='Event Source Host'),
        ),
    ]
