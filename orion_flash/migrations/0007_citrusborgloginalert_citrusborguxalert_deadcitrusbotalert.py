# Generated by Django 2.1.4 on 2019-03-12 22:44

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orion_flash', '0006_auto_20190305_1117'),
    ]

    operations = [
        migrations.CreateModel(
            name='CitrusBorgLoginAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orion_node_id', models.BigIntegerField(db_index=True, help_text='this is the value in this field to SQL join the Orion server database', verbose_name='Orion Node Id')),
                ('first_raised_on', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='alert first raised on')),
                ('last_raised_on', models.DateTimeField(auto_now=True, db_index=True, verbose_name='alert last raised on')),
                ('silenced', models.BooleanField(db_index=True, default=False, help_text='The Orion server will ignore this row when evaluating alert conditions. Note that this flag will be automatically reset every $configurable_interval', verbose_name='silence this alert?')),
                ('alert_body', models.TextField(verbose_name='alert body')),
                ('bot_url', models.URLField(verbose_name='Citrix bot URL')),
                ('events_url', models.URLField(verbose_name='ControlUp windows log events URL')),
                ('self_url', models.URLField(blank=True, null=True, verbose_name='SSL certificate URL')),
                ('host_name', models.CharField(db_index=True, max_length=63, unique=True, verbose_name='host name')),
                ('site', models.CharField(db_index=True, max_length=64, verbose_name='host name')),
                ('measured_now', models.DateTimeField(help_text='the definition of now. normally it is now() but it can be any moment in time for which we have data', verbose_name='measured from')),
                ('measured_over_mins', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in minutes', verbose_name='not seen threshold measured in minutes')),
                ('measured_over_hours', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in hours', verbose_name='not seen threshold measured in hours')),
                ('measured_over_days', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in days', verbose_name='not seen threshold measured in days')),
                ('failed_events_count', models.BigIntegerField(verbose_name='failed event count')),
                ('failed_events_threshold', models.BigIntegerField(db_index=True, help_text='trigger failed logon alerts against this field', verbose_name='failed event count threshold')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CitrusBorgUxAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orion_node_id', models.BigIntegerField(db_index=True, help_text='this is the value in this field to SQL join the Orion server database', verbose_name='Orion Node Id')),
                ('first_raised_on', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='alert first raised on')),
                ('last_raised_on', models.DateTimeField(auto_now=True, db_index=True, verbose_name='alert last raised on')),
                ('silenced', models.BooleanField(db_index=True, default=False, help_text='The Orion server will ignore this row when evaluating alert conditions. Note that this flag will be automatically reset every $configurable_interval', verbose_name='silence this alert?')),
                ('alert_body', models.TextField(verbose_name='alert body')),
                ('bot_url', models.URLField(verbose_name='Citrix bot URL')),
                ('events_url', models.URLField(verbose_name='ControlUp windows log events URL')),
                ('self_url', models.URLField(blank=True, null=True, verbose_name='SSL certificate URL')),
                ('host_name', models.CharField(db_index=True, max_length=63, unique=True, verbose_name='host name')),
                ('site', models.CharField(db_index=True, max_length=64, verbose_name='host name')),
                ('measured_now', models.DateTimeField(help_text='the definition of now. normally it is now() but it can be any moment in time for which we have data', verbose_name='measured from')),
                ('measured_over_mins', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in minutes', verbose_name='not seen threshold measured in minutes')),
                ('measured_over_hours', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in hours', verbose_name='not seen threshold measured in hours')),
                ('measured_over_days', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in days', verbose_name='not seen threshold measured in days')),
                ('avg_response_time', models.DurationField()),
                ('avg_response_time_threshold', models.DurationField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeadCitrusBotAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orion_node_id', models.BigIntegerField(db_index=True, help_text='this is the value in this field to SQL join the Orion server database', verbose_name='Orion Node Id')),
                ('first_raised_on', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='alert first raised on')),
                ('last_raised_on', models.DateTimeField(auto_now=True, db_index=True, verbose_name='alert last raised on')),
                ('silenced', models.BooleanField(db_index=True, default=False, help_text='The Orion server will ignore this row when evaluating alert conditions. Note that this flag will be automatically reset every $configurable_interval', verbose_name='silence this alert?')),
                ('alert_body', models.TextField(verbose_name='alert body')),
                ('bot_url', models.URLField(verbose_name='Citrix bot URL')),
                ('events_url', models.URLField(verbose_name='ControlUp windows log events URL')),
                ('self_url', models.URLField(blank=True, null=True, verbose_name='SSL certificate URL')),
                ('host_name', models.CharField(db_index=True, max_length=63, unique=True, verbose_name='host name')),
                ('site', models.CharField(db_index=True, max_length=64, verbose_name='host name')),
                ('measured_now', models.DateTimeField(help_text='the definition of now. normally it is now() but it can be any moment in time for which we have data', verbose_name='measured from')),
                ('measured_over_mins', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in minutes', verbose_name='not seen threshold measured in minutes')),
                ('measured_over_hours', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in hours', verbose_name='not seen threshold measured in hours')),
                ('measured_over_days', models.BigIntegerField(db_index=True, help_text='use this field to compare if threshold is specified in days', verbose_name='not seen threshold measured in days')),
                ('last_seen', models.DateTimeField(help_text='last seen as shown in WinlogbeatHost', verbose_name='last seen')),
                ('not_seen_for', models.CharField(blank=True, help_text='the diference between now and last_seen converted to a suitable time unit', max_length=64, null=True, verbose_name='not seen for')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
