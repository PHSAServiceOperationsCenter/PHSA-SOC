# Generated by Django 2.0.7 on 2018-08-24 20:04

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationEventForRuleDemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('notification', models.CharField(db_index=True, max_length=253, unique=True, verbose_name='notification')),
                ('notification_level', models.CharField(default='info', max_length=64, verbose_name='log, info, warn, error, critical, kill me now')),
                ('notification_type', models.CharField(default='notify', max_length=64, verbose_name='log, notify, notify and escalate, etc')),
                ('notification_args', jsonfield.fields.JSONField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_notificationeventforruledemo_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_notificationeventforruledemo_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('rule', models.CharField(db_index=True, help_text='mother of inventions', max_length=253, unique=True, verbose_name='rule name')),
                ('action', models.CharField(help_text='placeholder for action information; replace with a key', max_length=64, verbose_name='action')),
            ],
            options={
                'verbose_name': 'Basic Rule',
                'verbose_name_plural': 'Basic Rules',
            },
        ),
        migrations.CreateModel(
            name='RuleApplies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('field_name', models.CharField(max_length=64, verbose_name='field')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_ruleapplies_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TinDataForRuleDemos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('data_name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='something')),
                ('data_datetime_1', models.DateTimeField(verbose_name='data_datetime_1')),
                ('data_number_1', models.IntegerField(verbose_name='data_number_1')),
                ('data_string_1', models.CharField(max_length=16, verbose_name='data_string_1')),
                ('data_datetime_2', models.DateTimeField(verbose_name='data_datetime_2')),
                ('data_number_2', models.IntegerField(verbose_name='data_number_2')),
                ('data_string_2', models.CharField(max_length=16, verbose_name='data_string_2')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_tindataforruledemos_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_tindataforruledemos_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpirationRule',
            fields=[
                ('rule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rules_engine.Rule')),
                ('valid_after', models.DateTimeField(verbose_name='valid_after')),
                ('grace_period', models.DurationField(verbose_name='grace_period')),
            ],
            options={
                'abstract': False,
            },
            bases=('rules_engine.rule', models.Model),
        ),
        migrations.CreateModel(
            name='IntervalRule',
            fields=[
                ('rule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rules_engine.Rule')),
                ('max_val', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, verbose_name='minimum acceptable value')),
                ('min_val', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=5, verbose_name='maximum acceptable value')),
            ],
            options={
                'abstract': False,
            },
            bases=('rules_engine.rule', models.Model),
        ),
        migrations.AddField(
            model_name='ruleapplies',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules_engine.Rule', verbose_name='Rule'),
        ),
        migrations.AddField(
            model_name='ruleapplies',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_ruleapplies_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='rule',
            name='applies',
            field=models.ManyToManyField(through='rules_engine.RuleApplies', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='rule',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_rule_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='rule',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules_engine_rule_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
    ]
