# Generated by Django 2.2.6 on 2020-01-14 21:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    replaces = [
        ('ssl_cert_tracker', '0001_initial'),
        ('ssl_cert_tracker', '0004_subscription_tags'),
        ('ssl_cert_tracker', '0005_auto_20191031_0900'),
        ('ssl_cert_tracker', '0005_auto_20191031_1010'),
        ('ssl_cert_tracker', '0006_auto_20191227_1045'),
        ('ssl_cert_tracker', '0006_merge_20191216_1508'),
        ('ssl_cert_tracker', '0007_merge_20191230_0852'),
    ]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('subscription', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='subscription')),
                ('emails_list', models.TextField(verbose_name='subscribers')),
                ('from_email', models.CharField(blank=True, default='TSCST-Support@hssbc.ca', max_length=255, null=True, verbose_name='from')),
                ('template_dir', models.CharField(max_length=255, verbose_name='email templates directory')),
                ('template_name', models.CharField(max_length=64, verbose_name='email template name')),
                ('template_prefix', models.CharField(default='email/', max_length=64, verbose_name='email template prefix')),
                ('email_subject', models.TextField(blank=True, help_text='this is the conditional subject of the email template. it is normally just a fragment that will augmented by other variables', null=True, verbose_name='email subject fragment')),
                ('alternate_email_subject', models.TextField(blank=True, help_text='this is the non conditional subject of the email template.', null=True, verbose_name='fallback email subject')),
                ('headers', models.TextField(default='common_name,expires_in,not_before,not_after', verbose_name='data headers')),
                ('tags', models.TextField(blank=True, help_text='email classification tags placed on the subject line and in the email body', null=True, verbose_name='tags')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_subscription_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_subscription_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
        ),
        migrations.CreateModel(
            name='SslProbePort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('port', models.PositiveIntegerField(db_index=True, unique=True, verbose_name='port')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_sslprobeport_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_sslprobeport_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Network Port',
                'verbose_name_plural': 'Network Ports',
            },
        ),
        migrations.CreateModel(
            name='SslCertificateIssuer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('common_name', models.CharField(blank=True, db_index=True, help_text='SSL certificate commonName field', max_length=253, null=True, verbose_name='common name')),
                ('organization_name', models.CharField(blank=True, db_index=True, help_text='SSL certificate organizationName field', max_length=253, null=True, verbose_name='organization name')),
                ('country_name', models.CharField(blank=True, db_index=True, help_text='SSL certificate countryName field', max_length=2, null=True, verbose_name='country name')),
                ('is_trusted', models.BooleanField(db_index=True, default=False, help_text='is this a known SSL issuing authority (like Verisign or DigiCert)?', verbose_name='is trusted')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_sslcertificateissuer_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_sslcertificateissuer_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Issuing Authority for SSL Certificates',
                'verbose_name_plural': 'Issuing Authorities for SSL Certificates',
            },
        ),
        migrations.CreateModel(
            name='SslCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='object creation time stamp', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, help_text='object update time stamp', verbose_name='updated on')),
                ('enabled', models.BooleanField(db_index=True, default=True, help_text='if this field is checked out, the row will always be excluded from any active operation', verbose_name='enabled')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('common_name', models.CharField(blank=True, db_index=True, help_text='SSL certificate commonName field', max_length=253, null=True, verbose_name='common name')),
                ('organization_name', models.CharField(blank=True, db_index=True, help_text='SSL certificate organizationName field', max_length=253, null=True, verbose_name='organization name')),
                ('country_name', models.CharField(blank=True, db_index=True, help_text='SSL certificate countryName field', max_length=2, null=True, verbose_name='country name')),
                ('orion_id', models.BigIntegerField(db_index=True, help_text='Orion Node unique identifier  on the Orion server used to show the node in the Orion web console', verbose_name='orion node identifier')),
                ('hostnames', models.TextField(verbose_name='host names')),
                ('not_before', models.DateTimeField(db_index=True, verbose_name='not valid before')),
                ('not_after', models.DateTimeField(db_index=True, verbose_name='expires on')),
                ('pem', models.TextField(verbose_name='PEM')),
                ('pk_bits', models.CharField(db_index=True, max_length=4, verbose_name='private key bits')),
                ('pk_type', models.CharField(db_index=True, max_length=4, verbose_name='primary key type')),
                ('pk_md5', models.CharField(db_index=True, max_length=64, verbose_name='primary key md5 fingerprint')),
                ('pk_sha1', models.TextField(verbose_name='primary key sha1 fingerprint')),
                ('last_seen', models.DateTimeField(db_index=True, verbose_name='last seen')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_sslcertificate_created_by_related', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('issuer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ssl_cert_tracker.SslCertificateIssuer', verbose_name='Issued By')),
                ('port', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssl_cert_tracker.SslProbePort', verbose_name='TCP port')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ssl_cert_tracker_sslcertificate_updated_by_related', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'SSL Certificate',
                'verbose_name_plural': 'SSL Certificates',
                'unique_together': {('orion_id', 'port')},
            },
        ),
        migrations.CreateModel(
            name='SslExpiresIn',
            fields=[
            ],
            options={
                'verbose_name': 'Valid SSL Certificate',
                'verbose_name_plural': 'Valid SSL Certificates by expiration date',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ssl_cert_tracker.sslcertificate',),
        ),
        migrations.CreateModel(
            name='SslHasExpired',
            fields=[
            ],
            options={
                'verbose_name': 'SSL Certificate: expired',
                'verbose_name_plural': 'SSL Certificates: expired',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ssl_cert_tracker.sslcertificate',),
        ),
        migrations.CreateModel(
            name='SslNotYetValid',
            fields=[
            ],
            options={
                'verbose_name': 'SSL Certificate: not yet valid',
                'verbose_name_plural': 'SSL Certificates: not yet valid',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ssl_cert_tracker.sslcertificate',),
        ),
    ]
