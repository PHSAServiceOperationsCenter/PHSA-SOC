# Generated by Django 2.1.4 on 2019-02-22 21:36
from django.contrib.auth.models import User, UserManager
from django.db import migrations


def add_ssl_ports(apps, schema_editor):
    ports = [(261, False, 'Nsiiops',),
             (443, True, 'HTTPS',),
             (446, False, 'Openfiler management interface',),
             (448, False, 'ddm-ssl',),
             (465, False, 'SMTPS',),
             (563, False, 'NNTPS',),
             (585, False, 'imap4-ssl',),
             (614, False, 'SSLshell',),
             (636, False, 'LDAPS',),
             (684, False, 'Corba IIOP SSL',),
             (695, False, 'IEEE-MMS-SSL',),
             (902, False, 'VMWare Auth Daemon',),
             (989, False, 'FTPS data',),
             ]

    model = apps.get_model('ssl_cert_tracker', 'SslProbePort')

    user = User.objects.filter(is_superuser=True)
    if user.exists():
        user = user.first()
    else:
        user = User.objects.create(
            username='soc_su', email='soc_su@phsa.ca',
            password='soc_su_password', is_active=True, is_staff=True,
            is_superuser=True)
        user.set_password('soc_su_password')
        user.save()

    for port in ports:

        ssl_port = model.objects.filter(port=port[0])
        if ssl_port.exists():
            ssl_port = ssl_port.get()
        else:
            ssl_port = model(
                port=port[0], created_by_id=user.id, updated_by_id=user.id)
            ssl_port.enabled = port[1]

        ssl_port.notes = port[2]
        ssl_port.save()


class Migration(migrations.Migration):

    dependencies = [
        ('ssl_cert_tracker', '0023_auto_20190204_1052'),
    ]

    operations = [
        migrations.RunPython(add_ssl_ports,
                             reverse_code=migrations.RunPython.noop)
    ]
